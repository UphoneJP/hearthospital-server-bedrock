<% layout('layouts/boilerplate') %>

<div class="col-lg-6 offset-lg-3">
    <div class="card">
        <div class="card-body">
            <h3 class="mb-3">ユーザー登録</h3>

            <div class="d-flex flex-wrap">
                <a href="/auth/google">
                    <button class="gsi-material-button">
                        <div class="gsi-material-button-state"></div>
                        <div class="gsi-material-button-content-wrapper">
                            <div class="gsi-material-button-icon">
                                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" xmlns:xlink="http://www.w3.org/1999/xlink" style="display: block;">
                                    <path fill="#EA4335" d="M24 9.5c3.54 0 6.71 1.22 9.21 3.6l6.85-6.85C35.9 2.38 30.47 0 24 0 14.62 0 6.51 5.38 2.56 13.22l7.98 6.19C12.43 13.72 17.74 9.5 24 9.5z"></path>
                                    <path fill="#4285F4" d="M46.98 24.55c0-1.57-.15-3.09-.38-4.55H24v9.02h12.94c-.58 2.96-2.26 5.48-4.78 7.18l7.73 6c4.51-4.18 7.09-10.36 7.09-17.65z"></path>
                                    <path fill="#FBBC05" d="M10.53 28.59c-.48-1.45-.76-2.99-.76-4.59s.27-3.14.76-4.59l-7.98-6.19C.92 16.46 0 20.12 0 24c0 3.88.92 7.54 2.56 10.78l7.97-6.19z"></path>
                                    <path fill="#34A853" d="M24 48c6.48 0 11.93-2.13 15.89-5.81l-7.73-6c-2.15 1.45-4.92 2.3-8.16 2.3-6.26 0-11.57-4.22-13.47-9.91l-7.98 6.19C6.51 42.62 14.62 48 24 48z"></path>
                                    <path fill="none" d="M0 0h48v48H0z"></path>
                                </svg>
                            </div>
                            <span class="gsi-material-button-contents">Sign up with Google</span>
                            <span style="display: none;">Sign in with Google</span>
                        </div>
                    </button>
                </a>
                <p class="d-flex align-items-center my-0 ms-2 text-secondary" style="min-width:168px;">
                    <small>Googleアカウントで会員登録</small>
                </p>
            </div>    

            <hr>

            <form action="/register" method="POST" class="needs-validation" novalidate>
                    
                <div class="input-group mb-3">
                    <span class="input-group-text">ペンネーム</span>
                    <input type="text" class="form-control" name="penName" id="penName" required>
                </div>

                <div class="input-group mb-3">
                    <span class="input-group-text">E-mail</span>
                    <input type="email" class="form-control" name="email" id="email" required>
                    <!-- <a class="btn btn-primary" id="sendEmail">
                        送信
                        <span class="visually-hidden spinner-border spinner-border-sm text-primary" id="spinner"></span>
                    </a> -->
                </div>
                <!-- <p class="text-secondary m-0" id="hintText">
                    <small>※「support@hearthospital.jp」からメールを自動送信します。メール内の認証番号をご確認ください。</small>
                </p>

                <div class="input-group px-5 mb-4">
                    <span class="input-group-text">認証番号</span>
                    <input type="text" class="form-control"  id="authNum" name="authNum" required>
                </div> -->

                <div class="input-group mb-3">
                    <span class="input-group-text">パスワード</span>
                    <input type="password" class="form-control" id="passwordA" name="password" required>
                    <span class="input-group-text material-symbols-outlined" id="visibleA">
                        visibility
                    </span>
                </div>

                <div class="form-check d-flex justify-content-center mb-4">
                    <input class="form-check-input" type="checkbox" value="" id="checkbox" required>
                    <label class="form-check-label ms-2" for="checkbox">
                        <a href="/policy" target="_blank">利用規約・プライバシーポリシー</a>を確認し同意します。
                    </label>
                </div>
                
                <div class="text-center">
                    <button class="btn btn-secondary disabled" id="registerBtn">新規登録</button>
                </div>

            </form>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script nonce="<%=nonce%>">
    // passwordが見れるようになる
    document.addEventListener('DOMContentLoaded', function () {
        const passwordField = document.getElementById('passwordA');
        const visibilityToggle = document.getElementById('visibleA');

        visibilityToggle.addEventListener('click', function () {
            const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordField.setAttribute('type', type);
            
            if (type === 'text') {
                visibilityToggle.textContent = 'visibility_off';
            } else {
                visibilityToggle.textContent = 'visibility';
            }
        });
    });

    // 登録ボタンのアクティブ化
    const penName = document.getElementById('penName');
    const email = document.getElementById('email');
    const password = document.getElementById('passwordA');
    const checkbox = document.getElementById('checkbox');
    const registerButton = document.querySelector('#registerBtn');
    function btnActivate() {
      if (
        penName.value.trim() 
        && email.value.trim().includes('@') 
        && email.value.trim().includes('.') 
        && email.value.trim()[email.value.trim().length - 1] !== '@'
        && email.value.trim()[email.value.trim().length - 1] !== '.'
        && password.value.trim() 
        && checkbox.checked
      ) {
            registerButton.classList.remove('disabled', 'btn-secondary');
            registerButton.classList.add('btn-success');
        } else {
            registerButton.classList.remove('btn-success');
            registerButton.classList.add('disabled', 'btn-secondary');
        }
    };
    penName.addEventListener('input', btnActivate);
    email.addEventListener('input', btnActivate);
    password.addEventListener('input', btnActivate);
    checkbox.addEventListener('change', btnActivate);

    // メールを送る
    // const sendEmailBtn = document.querySelector('#sendEmail');
    // const email = document.querySelector('#email');
    // const hintText = document.querySelector('#hintText');
    // const checkbox = document.querySelector('#checkbox');
    // const authNum = document.querySelector('#authNum');
    // const registerBtn = document.querySelector('#registerBtn');
    // const spinner = document.querySelector('#spinner');
    // sendEmailBtn.addEventListener('click', ()=>{
    //     spinner.classList.remove('visually-hidden');
    //     email.classList.add('pe-none');
    //     sendEmailBtn.disabled = true;
    //     axios.post('/checkEmail', {email:email.value})
    //     .then(response =>{
    //         if(response.data.emailSent){
    //             sendEmailBtn.textContent = 'メールを送信しました';
    //             sendEmailBtn.classList.add('btn-outline-primary', 'pe-none');
    //             sendEmailBtn.classList.remove('btn-primary');

    //             // フォームの状態を確認する関数
    //             const checkFormState = () => {
    //                 if (authNum.value.toString() === response.data.nums && checkbox.checked) {
    //                     registerBtn.disabled = false;
    //                 } else {
    //                     registerBtn.disabled = true;
    //                 }
    //             };
    //             // 認証番号入力とチェックボックスのイベントリスナー
    //             authNum.addEventListener('input', checkFormState);
    //             checkbox.addEventListener('click', checkFormState);
    //         } else {
    //             hintText.textContent = 'エラーが発生し送信できませんでした。'
    //         }
    //     })
    //     .catch(e => {
    //         hintText.textContent = 'エラーが発生し送信できませんでした。再度お試しいただくか問い合わせフォームにてお知らせください。';
    //         console.log(e);
    //     })
    // })
</script>
